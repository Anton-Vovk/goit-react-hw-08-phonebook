{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","pages/PhonebookPage/PhonebookPage.module.css","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/PhonebookPage/PhonebookPage.jsx"],"names":["module","exports","Axios","defaults","baseURL","getLoading","state","phonebook","loading","getContacts","items","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","number","inputHandler","target","value","setState","SubmitHandler","event","preventDefault","hasContactName","props","myContacts","some","item","hasContactNumber","alert","createContact","this","className","styles","form","onSubmit","submitHandler","label","onChange","type","placeholder","input","required","pattern","button","autoClose","Component","connect","dispatch","a","addContactRequest","post","data","addContactSucces","addContactError","message","addContact","contacts","deleteContact","id","deleteContactRequest","delete","deleteContactSucces","error","listSection","map","onClick","filterContacts","title","Phonebook","renderContacts","isLoading","container","color","height","width","fetchContactsRequest","get","fetchContactsSucces","fetchContactsError"],"mappings":"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","file":"static/js/contacts-page.9d01d4cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__32-BG\",\"label\":\"ContactForm_label__23cO1\",\"input\":\"ContactForm_input__2wi4n\",\"button\":\"ContactForm_button__P4dJ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listSection\":\"ContactList_listSection__1hWX9\",\"item\":\"ContactList_item__2DK1Z\",\"button\":\"ContactList_button__lsZ82\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__1sdgz\",\"input\":\"Filter_input__3iYuT\",\"title\":\"Filter_title__37Qbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhonebookPage_container__2xr5b\",\"phonebook\":\"PhonebookPage_phonebook__1iKkJ\",\"contacts\":\"PhonebookPage_contacts__1hN6n\"};","import Axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSucces,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSucces,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSucces,\r\n  fetchContactsError,\r\n} from './phonebook-actions';\r\n\r\nAxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await Axios.get('/contacts');\r\n    dispatch(fetchContactsSucces(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\nconst addContact = (name, number) => async dispatch => {\r\n  const items = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await Axios.post('/contacts', items);\r\n    dispatch(addContactSucces(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error.message));\r\n  }\r\n};\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    Axios.delete(`/contacts/${id}`);\r\n\r\n    dispatch(deleteContactSucces(id));\r\n  } catch (error) {\r\n    dispatch(addContactError(error.message));\r\n  }\r\n};\r\n\r\nexport { addContact, deleteContact, fetchContacts };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.phonebook.loading;\r\nconst getContacts = state => state.phonebook.items;\r\nconst getPhonebook = state => state.phonebook;\r\nconst getFilter = state => state.phonebook.filter;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (items, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return items.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nexport {\r\n  getLoading,\r\n  getContacts,\r\n  getPhonebook,\r\n  getFilter,\r\n  getFilteredContacts,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { addContact } from '../../redux/phonebook/phonebook-operations';\r\nimport { getContacts } from '../../redux/phonebook/phonebook-selectors';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    createContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  inputHandler = ({ target }) => {\r\n    const { value, name } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  SubmitHandler = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    const hasContactName = this.props.myContacts.some(item => {\r\n      return item.name === name;\r\n    });\r\n    const hasContactNumber = this.props.myContacts.some(item => {\r\n      return item.number === number;\r\n    });\r\n\r\n    if (hasContactName) {\r\n      alert(`${name} is already in contacts!!!`);\r\n      return;\r\n    }\r\n    if (hasContactNumber) {\r\n      alert(`${number} is already in contacts!!!`);\r\n      return;\r\n    }\r\n\r\n    this.props.createContact(name, number);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <form className={styles.form} onSubmit={this.submitHandler}>\r\n          <label className={styles.label}>\r\n            {' '}\r\n            Name\r\n            <input\r\n              onChange={this.inputHandler}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Add name\"\r\n              value={name}\r\n              className={styles.input}\r\n              required\r\n            ></input>\r\n          </label>\r\n          <label className={styles.label}>\r\n            {' '}\r\n            Number\r\n            <input\r\n              onChange={this.inputHandler}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              placeholder=\"111-11-11\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              value={number}\r\n              className={styles.input}\r\n              required\r\n            ></input>\r\n          </label>\r\n          <button className={styles.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n        <ToastContainer autoClose={3000} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  myContacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  createContact: (name, number) => dispatch(addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/phonebook/phonebook-operations';\r\nimport { getFilteredContacts } from '../../redux/phonebook/phonebook-selectors';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <div className={styles.listSection}>\r\n      <ul>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className={styles.item} key={id}>\r\n            {name} - {number}\r\n            <button\r\n              className={styles.button}\r\n              type='button'\r\n              onClick={() => deleteContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getFilteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { filterContacts } from '../../redux/phonebook/phonebook-actions';\r\nimport styles from './Filter.module.css';\r\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\r\n\r\nconst Filter = ({ filter, inputHandler }) => {\r\n  return (\r\n    <>\r\n      <h4 className={styles.title}>Find contacts by name </h4>\r\n      <label className={styles.label}>\r\n        <input\r\n          onChange={inputHandler}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          placeholder=\"Search name\"\r\n          value={filter}\r\n          className={styles.input}\r\n        ></input>\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  inputHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  inputHandler: event => dispatch(filterContacts(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport ContactForm from '../../components/ContactForm';\r\nimport ContactList from '../../components/ContactList';\r\nimport Filter from '../../components/Filter';\r\nimport styles from './PhonebookPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { fetchContacts } from '../../redux/phonebook/phonebook-operations';\r\nimport { getLoading } from '../../redux/phonebook/phonebook-selectors';\r\n\r\nclass Phonebook extends Component {\r\n  componentDidMount() {\r\n    this.props.renderContacts();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.props;\r\n    return (\r\n      <div className={styles.container}>\r\n        <h1 className={styles.phonebook}>PHONEBOOK</h1>\r\n        <ContactForm />\r\n        <h2 className={styles.contacts}>CONTACTS</h2>\r\n        <Filter />\r\n\r\n        <ContactList />\r\n        {isLoading && (\r\n          <Loader type=\"Watch\" color=\"#777\" height={100} width={100} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  renderContacts: () => dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n"],"sourceRoot":""}